import React, { useEffect } from 'react'; // Import useEffect
import { useLocation, Link } from 'react-router-dom';
import { AlertTriangle, Check, X } from 'lucide-react';

const ResultsPage = () => {
  const location = useLocation();
  const result = location.state?.result;

  // **THIS IS THE FIX**: Clean up the temporary URL to prevent memory leaks
  useEffect(() => {
    return () => {
      if (result && result.fileUrl) {
        URL.revokeObjectURL(result.fileUrl);
      }
    };
  }, [result]);

  if (!result) {
    // ... (no change to this part)
    return (
      <div className="bg-gray-900 text-white min-h-screen flex flex-col items-center justify-center p-4">
        <h1 className="text-3xl font-bold">Result Not Found</h1>
        <p className="mt-4 text-lg text-white/70">
          The analysis result you're looking for is not available.
        </p>
        <Link to="/upload">
          <button className="mt-8 text-base font-semibold text-white px-6 py-3 rounded-lg bg-gradient-to-r from-blue-600 to-violet-600 hover:from-blue-700 hover:to-violet-700">
            Analyze a File
          </button>
        </Link>
      </div>
    );
  }

  const statusInfo = {
    deepfake: {
      text: 'Deepfake Detected',
      icon: <X size={24} />,
      colorClasses: 'bg-red-500/10 text-red-400',
    },
    authentic: {
      text: 'Likely Authentic',
      icon: <Check size={24} />,
      colorClasses: 'bg-green-500/10 text-green-400',
    },
    inconclusive: {
      text: 'Inconclusive',
      icon: <AlertTriangle size={24} />,
      colorClasses: 'bg-yellow-500/10 text-yellow-400',
    }
  }[result.status];

  return (
    <div className="bg-gray-900 text-white min-h-screen">
      <div className="max-w-2xl mx-auto px-4 py-12 sm:py-20 text-center">
        <h1 className="text-4xl font-bold">Analysis Result</h1>
        <div className="mt-8 bg-gray-800/50 border border-gray-700 rounded-lg overflow-hidden">
          <div className="aspect-video bg-gray-800 flex items-center justify-center">
            {result.sourceType === 'image' && result.fileUrl ? (
              <img src={result.fileUrl} alt="Analyzed content" className="w-full h-full object-contain" />
            ) : (
              <p className="text-gray-500">Video Preview</p>
            )}
          </div>
          <div className="p-6">
            <p className="text-sm text-gray-400">File Analyzed</p>
            <p className="font-medium text-lg truncate mb-4">{result.fileName}</p>
            <div className={`inline-flex items-center gap-3 p-3 rounded-lg ${statusInfo.colorClasses}`}>
              {statusInfo.icon}
              <div className="text-left">
                <p className="font-bold text-xl">{statusInfo.text}</p>
                <p className="text-sm opacity-80">
                  Confidence Score: <span className="font-mono">{`${Math.round(result.confidence * 100)}%`}</span>
                </p>
              </div>
            </div>
          </div>
        </div>
        <div className="mt-8 p-4 text-sm flex items-start gap-3 bg-yellow-500/10 text-yellow-300 rounded-lg border border-yellow-500/20">
          <AlertTriangle size={20} className="flex-shrink-0 mt-0.5" />
          <p className="text-left">
            This result is generated by AI and is not a guarantee. Always use critical thinking when evaluating content.
          </p>
        </div>
        <Link to="/upload" className="block mt-12">
          <button className="w-full text-base font-semibold text-white px-6 py-3 rounded-lg bg-gray-700 hover:bg-gray-600 transition-colors">
            Analyze Another File
          </button>
        </Link>
      </div>
    </div>
  );
};

export default ResultsPage;